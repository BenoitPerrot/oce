// This file is generated by WOK (CPPExt).
// Please do not edit this file; modify original file instead.
// The copyright and license terms as defined for the original file apply to 
// this header file considered to be the "object code" form of the original source.

#ifndef _Transfer_TransientListBinder_HeaderFile
#define _Transfer_TransientListBinder_HeaderFile

#include <Foundation/Standard/Standard.hxx>
#include <Foundation/Standard/Standard_DefineHandle.hxx>
#include <DataExchange/Transfer/Handle_Transfer_TransientListBinder.hxx>

#include <Foundation/TColStd/Handle_TColStd_HSequenceOfTransient.hxx>
#include <DataExchange/Transfer/Transfer_Binder.hxx>
#include <Foundation/Standard/Standard_Boolean.hxx>
#include <Foundation/Standard/Handle_Standard_Type.hxx>
#include <Foundation/Standard/Standard_CString.hxx>
#include <Foundation/Standard/Handle_Standard_Transient.hxx>
#include <Foundation/Standard/Standard_Integer.hxx>
class TColStd_HSequenceOfTransient;
class Standard_TypeMismatch;
class Standard_OutOfRange;
class Standard_Type;
class Standard_Transient;


//! This binder binds several (a list of) Transients with a starting
//! entity, when this entity itself corresponds to a simple list
//! of Transients. Each part is not seen as a sub-result of an
//! independant componant, but as an item of a built-in list
class Transfer_TransientListBinder : public Transfer_Binder
{

public:

  
  Standard_EXPORT Transfer_TransientListBinder();
  
  Standard_EXPORT Transfer_TransientListBinder(const Handle(TColStd_HSequenceOfTransient)& list);
  
  Standard_EXPORT virtual   Standard_Boolean IsMultiple()  const;
  
  Standard_EXPORT   Handle(Standard_Type) ResultType()  const;
  
  Standard_EXPORT   Standard_CString ResultTypeName()  const;
  
  //! Adds an item to the result list
  Standard_EXPORT   void AddResult (const Handle(Standard_Transient)& res) ;
  
  Standard_EXPORT   Handle(TColStd_HSequenceOfTransient) Result()  const;
  
  //! Changes an already defined sub-result
  Standard_EXPORT   void SetResult (const Standard_Integer num, const Handle(Standard_Transient)& res) ;
  
  Standard_EXPORT   Standard_Integer NbTransients()  const;
  
  Standard_EXPORT  const  Handle(Standard_Transient)& Transient (const Standard_Integer num)  const;




  DEFINE_STANDARD_RTTI(Transfer_TransientListBinder)

protected:




private: 


  Handle(TColStd_HSequenceOfTransient) theres;


};







#endif // _Transfer_TransientListBinder_HeaderFile
